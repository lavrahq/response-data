- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"properties\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"unit_id\" uuid NOT NULL, \"number\" serial, \"serial_number\" text, \"property_descriptor_id\"
      uuid, \"property_loss_type_id\" uuid, \"quantity\" integer, \"make\" text, \"model\"
      text, \"model_number\" text, \"measurement_id\" varchar, \"dollar_value\" float8,
      \"recovered_dollar_value\" float8, \"stolen_date\" date, \"recovery_date\" date,
      \"recovery_location_id\" uuid, \"intake_location_id\" uuid, \"intake_date\"
      date, \"intake_unit_id\" uuid, \"description\" text NOT NULL, \"created_at\"
      timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz NOT NULL DEFAULT
      now(), \"notes\" text, PRIMARY KEY (\"id\") );\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_properties_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"properties\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_properties_updated_at\" ON \"public\".\"properties\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';\n"
  type: run_sql
- args:
    name: properties
    schema: public
  type: add_existing_table_or_view
