- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"shift_entries\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"shift_entry_type_id\" uuid NOT NULL, \"shift_id\" uuid NOT NULL, \"unit_id\"
      uuid NOT NULL, \"dispatcher_id\" uuid, \"entry\" text NOT NULL, \"is_automated\"
      boolean NOT NULL DEFAULT false, \"created_at\" timestamptz NOT NULL DEFAULT
      now(), \"updated_at\" timestamptz NOT NULL DEFAULT now(), PRIMARY KEY (\"id\")
      , FOREIGN KEY (\"shift_id\") REFERENCES \"public\".\"shifts\"(\"id\") ON UPDATE
      cascade ON DELETE restrict, FOREIGN KEY (\"unit_id\") REFERENCES \"public\".\"units\"(\"id\")
      ON UPDATE cascade ON DELETE cascade, FOREIGN KEY (\"dispatcher_id\") REFERENCES
      \"public\".\"units\"(\"id\") ON UPDATE cascade ON DELETE set null);\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_shift_entries_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"shift_entries\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_shift_entries_updated_at\" ON \"public\".\"shift_entries\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';\n"
  type: run_sql
- args:
    name: shift_entries
    schema: public
  type: add_existing_table_or_view
