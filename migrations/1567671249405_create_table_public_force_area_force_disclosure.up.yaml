- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"force_area_force_disclosure\"(\"id\" uuid NOT
      NULL DEFAULT gen_random_uuid(), \"force_area_id\" uuid NOT NULL, \"force_disclosure_id\"
      uuid NOT NULL, \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\"
      timestamptz NOT NULL DEFAULT now(), PRIMARY KEY (\"id\") , FOREIGN KEY (\"force_area_id\")
      REFERENCES \"public\".\"force_areas\"(\"id\") ON UPDATE cascade ON DELETE cascade,
      FOREIGN KEY (\"force_disclosure_id\") REFERENCES \"public\".\"force_disclosures\"(\"id\")
      ON UPDATE cascade ON DELETE cascade, UNIQUE (\"force_area_id\", \"force_disclosure_id\"));\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_force_area_force_disclosure_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"force_area_force_disclosure\"\nFOR EACH ROW\nEXECUTE
      PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT ON TRIGGER
      \"set_public_force_area_force_disclosure_updated_at\" ON \"public\".\"force_area_force_disclosure\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';\n"
  type: run_sql
- args:
    name: force_area_force_disclosure
    schema: public
  type: add_existing_table_or_view
