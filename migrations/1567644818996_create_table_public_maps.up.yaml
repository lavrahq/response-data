- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"maps\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"title\" text NOT NULL, \"description\" text, \"is_real\" boolean NOT NULL
      DEFAULT false, \"trans_a\" float8 NOT NULL, \"trans_b\" float8 NOT NULL, \"trans_c\"
      float8 NOT NULL, \"trans_d\" float8 NOT NULL, \"sw_bounds\" geometry NOT NULL,
      \"ne_bounds\" geometry NOT NULL, \"min_zoom\" integer NOT NULL DEFAULT 0, \"max_zoom\"
      integer NOT NULL DEFAULT 5, \"default_zoom\" integer NOT NULL, \"center\" geometry
      NOT NULL, \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\"
      timestamptz NOT NULL DEFAULT now(), PRIMARY KEY (\"id\") );\nCREATE OR REPLACE
      FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS TRIGGER
      AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_maps_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"maps\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_maps_updated_at\" ON \"public\".\"maps\" \nIS 'trigger
      to set value of column \"updated_at\" to current timestamp on row update';\n"
  type: run_sql
- args:
    name: maps
    schema: public
  type: add_existing_table_or_view
