- args:
    sql: "CREATE TABLE \"public\".\"case_people\"(\"case_id\" uuid NOT NULL, \"person_id\"
      uuid NOT NULL, \"involvement_id\" uuid NOT NULL, \"involvement_type_id\" uuid,
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), PRIMARY KEY (\"case_id\",\"person_id\") , FOREIGN KEY
      (\"case_id\") REFERENCES \"public\".\"cases\"(\"id\") ON UPDATE cascade ON DELETE
      cascade, FOREIGN KEY (\"person_id\") REFERENCES \"public\".\"people\"(\"id\")
      ON UPDATE cascade ON DELETE cascade, FOREIGN KEY (\"involvement_id\") REFERENCES
      \"public\".\"involvements\"(\"id\") ON UPDATE cascade ON DELETE cascade, FOREIGN
      KEY (\"involvement_type_id\") REFERENCES \"public\".\"involvement_types\"(\"id\")
      ON UPDATE cascade ON DELETE cascade);\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_case_people_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"case_people\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_case_people_updated_at\" ON \"public\".\"case_people\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';\n"
  type: run_sql
- args:
    name: case_people
    schema: public
  type: add_existing_table_or_view
